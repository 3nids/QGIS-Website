# 
msgid ""
msgstr ""
"Project-Id-Version: QGIS 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-06 11:32\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:5
msgid "Network analysis library"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:7
msgid ""
"Starting from revision `ee19294562 <https://github.com/qgis/Quantum-"
"GIS/commit/ee19294562b00c6ce957945f14c1727210cffdf7>`_ (QGIS >= 1.8) the new"
" network analysis library was added to the QGIS core analysis library. The "
"library:"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:11
msgid ""
"creates mathematical graph from geographical data (polyline vector layers)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:12
msgid ""
"implements basics method of the graph theory (currently only Dijkstra's "
"algorithm)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:15
msgid ""
"Network analysis library was created by exporting basics functions from "
"RoadGraph core plugin and now you can use it's methods in plugins or "
"directly from Python console."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:20
msgid "General information"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:22
msgid "Briefly typical use case can be described as:"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:24
msgid "create graph from geodata (usually polyline vector layer)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:25
msgid "run graph analysis"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:26
msgid "use analysis results (for example, visualize them)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:29
msgid "Building graph"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:31
msgid ""
"The first thing you need to do --- is to prepare input data, that is to "
"convert vector layer into graph. All further actions will use this graph, "
"not the layer."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:35
msgid ""
"As a source we can use any polyline vector layer. Nodes of the polylines "
"become graph vertices, and segments of the polylines are graph edges. If "
"several nodes have the same coordinates then they are the same graph vertex."
" So two lines that have a common node become connected to each other."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:40
msgid ""
"Additionally, during graph creation it is possible to \"fix\" (\"tie\") to "
"the input vector layer any number of additional points. For each additional "
"point a match will be foundÂ --- closest graph vertex or closest graph edge. "
"In the latter case the edge will be splitted and new vertex added."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:45
msgid ""
"As the properties of the edge a vector layer attributes can be used and "
"length of the edge."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:48
msgid ""
"Converter from vector layer to graph is developed using `Builder "
"<http://en.wikipedia.org/wiki/Builder_pattern>`_ programming pattern. For "
"graph construction response so-called Director. There is only one Director "
"for now: `QgsLineVectorLayerDirector "
"<http://qgis.org/api/api/classQgsLineVectorLayerDirector.html>`_. The "
"director sets the basic settings that will be used to construct a graph from"
" a line vector layer, used by the builder to create graph. Currently, as in "
"the case with the director, only one builder exists: `QgsGraphBuilder "
"<http://qgis.org/api/api/classQgsGraphBuilder.html>`_, that creates "
"`QgsGraph <http://qgis.org/api/api/classQgsGraph.html>`_ objects. You may "
"want to implement your own builders that will build a graphs compatible with"
" such libraries as `BGL "
"<http://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ or "
"`NetworkX <http://networkx.lanl.gov/>`_."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:59
msgid ""
"To calculate edge properties programming pattern `strategy "
"<http://en.wikipedia.org/wiki/Strategy_pattern>`_ is used. For now only "
"`QgsDistanceArcProperter "
"<http://qgis.org/api/api/classQgsDistanceArcProperter.html>`_ strategy is "
"available, that takes into account the length of the route. You can "
"implement your own strategy that will use all necessary parameters. For "
"example, RoadGraph plugin uses strategy that compute travel time using edge "
"length and speed value from attributes."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:66
msgid "It's time to dive in the process."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:68
msgid ""
"First of all, to use this library we should import networkanalysis module::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:72
msgid "Than create director::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:85
msgid ""
"To construct a director  we should pass vector layer, that will be used as "
"source for graph and information about allowed movement on each road segment"
" (unilateral or bilateral movement, direct or reverse direction). Here is "
"full list of this parameters:"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:90
msgid "vl --- vector layer used to build graph"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:91
msgid ""
"directionFieldId --- index of the attribute table field, where information "
"about roads directions is stored. If -1, then don't use this info at all"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:93
msgid ""
"directDirectionValue --- field value for roads with direct direction (moving"
" from first line point to last one)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:95
msgid ""
"reverseDirectionValue --- field value for roads with reverse direction "
"(moving from last line point to first one)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:97
msgid ""
"bothDirectionValue --- field value for bilateral roads (for such roads we "
"can move from first point to last and from last to first)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:99
msgid ""
"defaultDirection --- default road direction. This value will be used for "
"those roads where field directionFieldId is not set or have some value "
"different from above."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:103
msgid ""
"It is necessary then to create strategy for calculating edge properties::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:107
msgid "And tell the director about this strategy::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:111
msgid ""
"Now we can create builder, which will create graph. QgsGraphBuilder "
"constructor takes several arguments:"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:114
msgid "crs --- coordinate reference system to use. Mandatory argument."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:115
msgid ""
"otfEnabled --- use \"on the fly\" reprojection or no. By default "
"const:`True` (use OTF)."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:117
msgid "topologyTolerance --- topological tolerance. Default value is 0."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:118
msgid "ellipsoidID --- ellipsoid to use. By default \"WGS84\"."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:125
msgid ""
"Also  we can set several points, which will be used in analysis. For "
"example::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:130
msgid "Now all is in place so we can build graph and \"tie\" points to it::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:134
msgid ""
"Building graph can take some time (depends on number of features in a layer "
"and layer size). tiedPoints is a list with coordinates of \"tied\" points. "
"When build operation is finished we can get graph and use it for the "
"analysis::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:140
msgid "With the next code we can get indexes of our points::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:147
msgid "Graph analysis"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:149
msgid ""
"Networks analysis is used to find answers on two questions: which vertices "
"are connected and how to find a shortest path. To solve this problems "
"network analysis library provides Dijkstra's algorithm."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:153
msgid ""
"Dijkstra's algorithm finds the best route from one of the vertices of the "
"graph to all the others and the values of the optimization parameters. The "
"results can be represented as shortest path tree."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:157
msgid ""
"The shortest path tree is as oriented weighted graph (or more precisely --- "
"tree) with the following properties:"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:160
msgid "only one vertex have no incoming edges â the root of the tree"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:161
msgid "all other vertices have only one incoming edge"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:162
msgid ""
"if vertex B is reachable from vertex A, then path from A to B is single "
"available path and it is optimal (shortest) on this graph"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:165
msgid ""
"To get shortest path tree use methods Use methods :func:`shortestTree` and "
":func:`dijkstra` of `QgsGraphAnalyzer "
"<http://qgis.org/api/api/classQgsGraphAnalyzer.html>`_ class. It is "
"recommended to use method :func:`dijkstra` because it works faster and uses "
"memory more efficiently."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:170
msgid ""
"The :func:`shortestTree` method is useful when you want to walk around the "
"shortest path tree. It always creates new graph object (QgsGraph) and "
"accepts three variables:"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:174
msgid "source --- input graph"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:175
msgid ""
"startVertexIdx --- index of the point on the tree (the root of the tree)"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:176
msgid "criterionNum --- number of edge property to use (started from 0)."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:182
msgid ""
"The :func:`dijkstra` method has the same arguments, but returns two arrays. "
"In the first array element i contains index of the incoming edge or -1 if "
"there are no incoming edges. In the second array element i contains distance"
" from the root of the tree to vertex i or DOUBLE_MAX if vertex i is "
"unreachable from the root."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:192
msgid ""
"Here is very simple code to display shortest path tree using graph created "
"with :func:`shortestTree` method (select linestring layer in TOC and replace"
" coordinates with yours one). **Warning**: use this code only as an example,"
" it creates a lots of `QgsRubberBand "
"<http://qgis.org/api/api/classQgsRubberBand.html>`_ objects and may be slow "
"on large datasets."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:232
msgid "Same thing but using :func:`dijkstra` method::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:267
msgid "Finding shortest path"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:269
msgid ""
"To find optimal path between two points the following approach is used. Both"
" points (start A and end B) are \"tied\" to graph when it builds. Than using"
" methods :func:`shortestTree` or :func:`dijkstra` we build shortest tree "
"with root in the start point A. In the same tree we also found end point B "
"and start to walk through tree from point B to point A. Whole algorithm can "
"be written as::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:284
msgid ""
"At this point we have path, in the form of the inverted list of vertices "
"(vertices are listed in reversed order from end point to start one) that "
"will be visited during traveling by this path."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:288
msgid ""
"Here is the sample code for QGIS Python Console (you will need to select "
"linestring layer in TOC and replace coordinates in the code with yours) that"
" uses method :func:`shortestTree`::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:340
msgid "And here is the same sample but using :func:`dikstra` method::"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:388
msgid "Areas of the availability"
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:390
msgid ""
"Area of availability for vertex A is a subset of graph vertices, that are "
"accessible from vertex A and cost of the path from A to this vertices are "
"not greater that some value."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:394
msgid ""
"More clearly this can be shown with the following example: \"There is a fire"
" station. What part of city fire command can reach in 5 minutes? 10 minutes?"
" 15 minutes?\". Answers on this questions are fire station's areas of "
"availability."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:398
msgid ""
"To find areas of availablity we can use method :func:`dijksta` of the "
":class:`QgsGraphAnalyzer` class. It is enough to compare elements of cost "
"array with predefined value. If cost[ i ] is less or equal than predefined "
"value, than vertex i is inside area of availability, otherwise --- outside."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:403
msgid ""
"More difficult it is to get borders of area of availablity. Bottom border "
"--- is a set of vertices that are still accessible, and top border --- is a "
"set of vertices which are not accesible. In fact this is simple: "
"availability border passed on such edges of the shortest path tree for which"
" start vertex is accessible and end vertex is not accessible."
msgstr ""

#: ../../source/website/getinvolved/development/pyqgis_developer_cookbook/12_network_analysis.rst:409
msgid "Here is an example::"
msgstr ""
